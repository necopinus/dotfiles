#!/usr/bin/env -S bash -l

# NOTE: Bash is called above as a login shell using the -l flag to force
# /etc/profile and ~/.profile to be read, since this script may get
# called by GUI processes where the full shell environment (including
# Homebrew's path) hasn't been initialized

# TODO: This is not very well tested...

set -e

# Sanity-check input
# 
if [[ -d "$1" ]]; then
	DIR="$(realpath "$1")"
else
	DIR="$(realpath -- "$(dirname -- "$1")")"
	if [[ ! -d "$DIR" ]]; then
		echo "Provided path does not appear to map to a valid directory!"
		exit 1
	fi
fi

# Actual flow control is not that exciting
#
TMUX_SESSIONS="$(tmux list-sessions -F "#{session_name} #{session_attached}" 2> /dev/null || true)"

if [[ $(echo "$TMUX_SESSIONS" | wc -l) -gt 0 ]]; then
	TMUX_DEFAULT_SESSION="$(hostname | sed 's/\./_/g')"

	if [[ $(echo "$TMUX_SESSIONS" | grep "^${TMUX_DEFAULT_SESSION} " | cut -d " " -f 2) -gt 0 ]]; then
		tmux new-window -t ${TMUX_DEFAULT_SESSION}: -c "$DIR"
	elif [[ $(echo "$TMUX_SESSIONS" | grep -vc ' 0$') -gt 0 ]]; then
		tmux new-window -t $(echo "$TMUX_SESSIONS" | grep -v ' 0$' | head -1 | cut -d " " -f 1): -c "$DIR"
	elif [[ $(echo "$TMUX_SESSIONS" | grep -c "^${TMUX_DEFAULT_SESSION} ") -eq 1 ]]; then
		tmux new-window -t ${TMUX_DEFAULT_SESSION}: -c "$DIR"
	else
		tmux new-window -t $(echo "$TMUX_SESSIONS" | head -1 | cut -d " " -f 1): -c "$DIR"
	fi
elif [[ -n "$DISPLAY" ]] || [[ -n "$WAYLAND_DISPLAY" ]] || [[ "$OS" == "macos" ]]; then
	if [[ ! -f "$HOME/_notmux" ]] && [[ ! -f "$HOME/_notmux.txt" ]]; then
		kitty tmux new-session -A -s $(hostname | sed 's/\./_/g') -c "$DIR" &
		disown
	else
		kitty -d "$DIR" &
		disown
	fi
else
	echo "Run the following command:"
	echo "    cd \"$DIR\""
fi
