# Based on information from the following sources:
#
# https://gist.github.com/jakewarren/477ecd1149abe908cbd5cf7a7c9abaa3
# https://wiki.archlinux.org/index.php/cgroups#Persistent_group_configuration
# https://sylabs.io/guides/3.0/user-guide/cgroups.html
#
group browsers {
  perm {
    task {
      uid = necopinus;
      gid = necopinus;
    }
    admin {
      uid = necopinus;
      gid = necopinus;
    }
  }
  # Note that we need to expose all (used) CPUs and memory nodes at the
  # group level in order to be able to use them in a subgroup.
  #
  # Note that cpuset.cpus *must* always be paired with cpuset.mems,
  # which indicates memory access. This will be just 0 if there's no
  # per-CPU memory access (in which case it *always* needs to be 0), or
  # it will be a range (like cpuset.cpus) if per-CPU memory access is
  # enabled. Use `cat /sys/fs/cgroup/cpuset/cpuset.mems` to see the
  # default value (and thus if a range is required). If a range is
  # required for cpuset.mems, then it *must* match the value from used
  # for cpuset.cpus.
  #
  cpuset {
    cpuset.cpus = "0-3";
    cpuset.mems = 0;
  }
  memory { }
}

group browsers/brave {
  cpuset {
    # Allow Brave to use two cores (0, 1).
    #
    cpuset.cpus = "0-1";
    cpuset.mems = 0;
  }
  memory {
    # Limit Brave's memory usage to 8 GB.
    #
    memory.limit_in_bytes = "8G";
  }
}

group browsers/chrome {
  cpuset {
    # Allow Chrome to use two cores (2, 3).
    #
    cpuset.cpus = "2-3";
    cpuset.mems = 0;
  }
  memory {
    # Limit Chrome's memory usage to 8 GB.
    #
    memory.limit_in_bytes = "8G";
  }
}
